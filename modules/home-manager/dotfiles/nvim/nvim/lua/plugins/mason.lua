return {
    -- prevent rustanalyzer from using mason-lspconfig, see https://github.com/mrcjkb/rustaceanvim/blob/master/doc/mason.txt
    {
        "neovim/nvim-lspconfig",
        opts = {
            setup = {
                rust_analyzer = function()
                    return true
                end,
            },
        },
    },
    {
        "williamboman/mason-lspconfig.nvim",
        branch = "v1.x",
    },
    {
        "mason-org/mason.nvim",
        opts = {
            PATH = "append",
            ensure_installed = {
                "stylua",
                "shellcheck",
                "shfmt",
                "flake8",
                "gofumpt",
                "autopep8",
                "bash-debug-adapter",
                "black",
                "bash-language-server",
                "debugpy",
                "goimports",
                "goimports-reviser",
                "golangci-lint",
                "golines",
                "gopls",
                -- "golangci-lint-langserver",
                "delve",
                "html-lsp",
                "json-lsp",
                "json-to-struct",
                "mypy",
                "pydocstyle",
                "reorder-python-imports",
                -- "rust-analyzer",
                "rustfmt",
                "shellcheck",
                "shfmt",
                "stylua",
                "ruff",

                "go-debug-adapter",
                "hadolint",
                "jdtls",
                "jq",
                "lua-language-server",
                "marksman",
                "nil",
                "protolint",
                "rnix-lsp",
                "nixfmt",
                "ruff-lsp",
                "taplo",
                "typescript-language-server",
                "yaml-language-server",
                "yamlfix",
                "yamlfmt",
                "yamllint",
                "yq",
                "prettierd",
                "prettier",
                -- "gleam",
            },
        },
    },
}
